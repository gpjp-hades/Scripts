#!/usr/bin/env bash
#title           :run
#description     :This script will execute on boot-sequence and get config from server, then pass it to startup-parse.sh
#author		     :horovtom
#date            :1506032671
#version         :0.1
#notes           :
#==============================================================================

targetDir="/opt/hades"

function installMode() {
    echo "Installing: $1"

    local output=$( sudo apt-get install $1 -y )
    echo "$output"
}

function addToExecuted() {
    echo $1 >> $targetDir/executed.list
}

function alreadyExecuted() {
    grep -Fxq $1 $targetDir/executed.list 
    return $?
}

function singleMode() {
    echo "Singleing: $1"
    #Get first word (should be ID)
    local commandID=$( awk '{print $1}' <<< $1 )
    if ! [[ $commandID =~ ^-?[0-9]+$ ]] ; then
        echo "Wrong syntax for singleMode. Expected ID, got: $commandID"
        exit -2
    fi
    alreadyExecuted $commandID
    if [[ $? -ne 0 ]] ; then
        local commandToExec=$( echo $1 | cut -d " " -f2- )
        echo "Executing $commandToExec"
        output=$( sudo bash -c "$commandToExec" )

        echo "$output"

        addToExecuted $commandID
    else
        echo "Command $commandID has been already executed on this machine"
    fi
}

function routineMode() {
    echo "Routining: $1 as $defaultUser"
    #We have to substitute all '"' for '\"', because of the nested bash calls
    local g="\""
    local h="\\\""
    local result=\"${1//$g/$h}\"
    output=$( sudo su -c "bash -c \"\"$result\"\"" $defaultUser )

    echo "$output"
}

function routineRootMode() {
    echo "Routining as root: $1"
    output=$( sudo bash -c "$1" )

    echo "$output"
}

function loadConfig() {
    if [[ ! -f $targetDir/hades.conf ]]
    then
        echo "Config not found in "$targetDir"/hades.conf"
        exit -1
    else
        . $targetDir/hades.conf
    fi
    if [[ ! -f $targetDir/local.conf ]]
    then
        echo "Config not found in "$targetDir"/local.conf"
        exit -1
    else
        . $targetDir/local.conf
    fi
}

loadConfig


#Check number of args:
if [[ $# -ne 2 ]] ; then
    echo "ERROR: I got wrong number of args: $#"
    exit -1
fi


echo "I got parameters: $1 $2"

case "$1" in
    "I")
        installMode "$2"
    ;;
    "S")
        singleMode "$2"
    ;;
    "Rr")
        routineRootMode "$2"
    ;;
    "R")
        routineMode "$2"
    ;;
    *)
        echo "I don't know mode: $1, skipping"
    ;;
esac

echo "--Command Done--"
echo ""

